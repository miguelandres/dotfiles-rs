searchState.loadedDescShard("dotfiles_core", 0, "The core of Dotfiles-rs is basically a set of directives …\nThis module contains the base trait for all Actions.\nThis module contains the base trait for all Directive and …\nModule for the error handling classes and enums.\nWraps some logic to run external commands and handle errors\nContains helpful functions to deal with paths in the …\nThis module contains the definition of a setting and code …\nModule that defines helper functions to process YAML …\nAn action to be run by a the dotfiles runtime.\nTrait to parse a specific action type from StrictYaml.\nThe action type this object parses\nTrait for actions to be skippable under certain conditions.\nSkip this whole action in CI environments.\nChecks that the conditions allow for executing this …\nExecutes the action.\nWhether the execution environment is presumed to be CI\nBuilds a single action of type ActionParser::ActionType …\nBuilds a list of actions of type ActionParser::ActionType …\nWhether to skip this action in Continuous Integration …\nA parser for action steps, each directive represents a …\nA struct that contains the default settings for a …\nA trait for all directives, it is shared between …\nReturns the default settings as configured.\nDefault settings for this directive.\nReturns the directive data for this object\nConstructs a new directive from a name and a set of …\nReturns the argument unchanged.\nParses an individual setting named <code>name</code> from a yaml hash …\nParse a particular setting with its correct type from …\nCalls <code>U::from(self)</code>.\nReturns the name of the directive.\nUnique name of this directive.\nParses all settings for this directive from StrictYaml, …\n<code>DirectiveData.setting_types</code>.\nA core logic error for Dotfiles-rs\nStruct that represents an error that happened while …\nA collection of types of errors that may occur while …\nAn error occurred while running a command necessary for …\nA filesystem error that was encountered while either …\nThe configuration is missing a required field\nThe configuration file is inconsistent with itself or with …\nAn error only for testing, the action that should fail …\nReceived an StrictYaml object of an unexpected type\nAn error that occurred while parsing the StrictYaml file\nAdds a prefix to an error with the name of the directive …\nAdds a prefix to the existing message\nError type\nCreates an ErrorType::ExecutionError\nExecutes the <code>process_function</code> on each of the items in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new Dotfiles error with the given message and …\nCreates a new Dotfiles error with the given message and …\nCreates a new Dotfiles error with the given message and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the error is a Fs error.\nReturns whether the error is an Inconsistent Config.\nreturns whether the underlying error is a missing …\nReturns whether the error is a wrong yaml type.\nReturns whether the error is a wrong yaml type.\nHuman-readable error message\nExecutes the <code>process_function</code> on each of the items in the …\nWhat we got instead of the expected type.\nIf the command attempted to execute but failed for some …\nAn example of what we expected.\nThe underlying filesystem error.\nName of the field missing in the configuration\nIf the command could not execute for some reason the …\nThe underlying scan error\nExecutes the <code>cmd</code> and waits for it to finish.\nConverts a file path to absolute if it is relative. If …\nChecks for ~ and replaces it with a home directory if …\nA boolean value for a setting\nAn Integer value for a setting\nRepresents a value for a setting\nThe Settings object is a hashmap of option names to a …\nA string value for a setting\nReturns the argument unchanged.\nReturns a Settings object from an array as a bit of …\nCalls <code>U::from(self)</code>.\nParse a setting from StrictYaml given a particular setting …\nProcess each element of the hash with the <code>process_function</code> …\nGets a specific boolean setting from a yaml hash\nGets a boolean value for the setting named <code>name</code>.\nGets a Boolean value from YAML or context.\nGets a specific integer setting from a yaml hash\nGets a Int value for the setting named <code>name</code>.\nGets a Integer value from YAML or context.\nGets a specific string array setting from a yaml hash, but …\nGets a String value for the setting named <code>name</code>.\nGets a specific setting from a yaml hash\nGets a specific string array setting from a yaml hash\nGets the content of this YAML node or the value for a …\nGets a specific string setting from a yaml hash\nGets a String value for the setting named <code>name</code>.\nGets a String value from YAML or context.\nCalls a processing function on all elements of an array, …\nParse a yaml element as an array.\nParse a yaml element as boolean.\nParse a yaml element as Integer.\nParse a yaml element as string, will convert booleans and …\nGets a native <code>Vec&lt;String&gt;</code> from a StrictYaml::Array. It …\nGets the value for a specified key in a yaml hash and does …\nExecutes the <code>process_function</code> on each of the items in the …\nReads a StrictYaml File. Returns Error in case of a syntax …")