impl !RefUnwindSafe for dotfiles_core::error::DotfilesError
impl !RefUnwindSafe for dotfiles_core::error::ErrorType
impl !UnwindSafe for dotfiles_core::error::DotfilesError
impl !UnwindSafe for dotfiles_core::error::ErrorType
impl RefUnwindSafe for dotfiles_core::directive::DirectiveData
impl RefUnwindSafe for dotfiles_core::settings::Setting
impl Send for dotfiles_core::directive::DirectiveData
impl Send for dotfiles_core::error::DotfilesError
impl Send for dotfiles_core::error::ErrorType
impl Send for dotfiles_core::settings::Setting
impl Sync for dotfiles_core::directive::DirectiveData
impl Sync for dotfiles_core::error::DotfilesError
impl Sync for dotfiles_core::error::ErrorType
impl Sync for dotfiles_core::settings::Setting
impl Unpin for dotfiles_core::directive::DirectiveData
impl Unpin for dotfiles_core::error::DotfilesError
impl Unpin for dotfiles_core::error::ErrorType
impl Unpin for dotfiles_core::settings::Setting
impl UnwindSafe for dotfiles_core::directive::DirectiveData
impl UnwindSafe for dotfiles_core::settings::Setting
pub const dotfiles_core::action::SKIP_IN_CI_SETTING: &'static str
pub enum dotfiles_core::Setting
pub enum dotfiles_core::error::ErrorType
pub enum dotfiles_core::settings::Setting
pub enum variant dotfiles_core::Setting::Boolean(bool)
pub enum variant dotfiles_core::Setting::Integer(i64)
pub enum variant dotfiles_core::Setting::String(String)
pub enum variant dotfiles_core::error::ErrorType::CoreError
pub enum variant dotfiles_core::error::ErrorType::ExecutionError
pub enum variant dotfiles_core::error::ErrorType::FileSystemError
pub enum variant dotfiles_core::error::ErrorType::IncompleteConfigurationError
pub enum variant dotfiles_core::error::ErrorType::InconsistentConfigurationError
pub enum variant dotfiles_core::error::ErrorType::TestingErrorActionSucceedsWhenItShouldFail
pub enum variant dotfiles_core::error::ErrorType::UnexpectedYamlTypeError
pub enum variant dotfiles_core::error::ErrorType::YamlParseError
pub enum variant dotfiles_core::settings::Setting::Boolean(bool)
pub enum variant dotfiles_core::settings::Setting::Integer(i64)
pub enum variant dotfiles_core::settings::Setting::String(String)
pub fn dotfiles_core::Action::execute(&self) -> Result<(), dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::Directive::get_setting_from_yaml_hash(&'a self, name: &str, yaml: &StrictYaml) -> Result<dotfiles_core::settings::Setting, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::Directive::get_setting_from_yaml_hash_or_from_context(&'a self, name: &str, yaml: &StrictYaml, context_settings: &dotfiles_core::settings::Settings) -> Result<dotfiles_core::settings::Setting, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::Setting::clone(&self) -> dotfiles_core::settings::Setting
pub fn dotfiles_core::Setting::eq(&self, other: &dotfiles_core::settings::Setting) -> bool
pub fn dotfiles_core::Setting::fmt(&self, f: &mut $crate::fmt::Formatter<'_>) -> $crate::fmt::Result
pub fn dotfiles_core::action::Action::execute(&self) -> Result<(), dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::action::ActionParser::parse_action(&'a self, settings: &dotfiles_core::settings::Settings, yaml: &StrictYaml, current_dir: &Path) -> Result<Self::ActionType, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::action::ActionParser::parse_action_list(&'a self, settings: &dotfiles_core::settings::Settings, yaml: &StrictYaml, current_dir: &Path) -> Result<Vec<Self::ActionType>, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::action::ConditionalAction::check_conditions_and_execute(&self) -> Result<(), dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::action::ConditionalAction::skip_in_ci(&self) -> bool
pub fn dotfiles_core::action::is_running_in_ci() -> bool
pub fn dotfiles_core::directive::Directive::get_setting_from_yaml_hash(&'a self, name: &str, yaml: &StrictYaml) -> Result<dotfiles_core::settings::Setting, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::directive::Directive::get_setting_from_yaml_hash_or_from_context(&'a self, name: &str, yaml: &StrictYaml, context_settings: &dotfiles_core::settings::Settings) -> Result<dotfiles_core::settings::Setting, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::directive::DirectiveData::clone(&self) -> dotfiles_core::directive::DirectiveData
pub fn dotfiles_core::directive::DirectiveData::defaults(&self) -> &dotfiles_core::settings::Settings
pub fn dotfiles_core::directive::DirectiveData::fmt(&self, f: &mut $crate::fmt::Formatter<'_>) -> $crate::fmt::Result
pub fn dotfiles_core::directive::DirectiveData::from(name: String, defaults: dotfiles_core::settings::Settings) -> dotfiles_core::directive::DirectiveData
pub fn dotfiles_core::directive::DirectiveData::name(&self) -> &String
pub fn dotfiles_core::directive::DirectiveData::parse_context_defaults(&self, yaml_settings: &StrictYaml) -> Result<dotfiles_core::settings::Settings, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::directive::DirectiveData::parse_setting_value(&self, name: &str, yaml: &StrictYaml) -> Result<dotfiles_core::settings::Setting, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::directive::HasDirectiveData::defaults(&'a self) -> &'a dotfiles_core::settings::Settings
pub fn dotfiles_core::directive::HasDirectiveData::directive_data(&'a self) -> &'a dotfiles_core::directive::DirectiveData
pub fn dotfiles_core::directive::HasDirectiveData::name(&'a self) -> &'a str
pub fn dotfiles_core::error::DotfilesError::add_message_prefix(&mut self, prefix: String)
pub fn dotfiles_core::error::DotfilesError::error_type(&self) -> &dotfiles_core::error::ErrorType
pub fn dotfiles_core::error::DotfilesError::fmt(&self, f: &mut $crate::fmt::Formatter<'_>) -> $crate::fmt::Result
pub fn dotfiles_core::error::DotfilesError::fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result
pub fn dotfiles_core::error::DotfilesError::from(message: String, error_type: dotfiles_core::error::ErrorType) -> Self
pub fn dotfiles_core::error::DotfilesError::from_io_error(io_error: std::io::Error) -> Self
pub fn dotfiles_core::error::DotfilesError::from_wrong_yaml(message: String, wrong_yaml: StrictYaml, expected_type: StrictYaml) -> Self
pub fn dotfiles_core::error::DotfilesError::is_fs_error(&self) -> bool
pub fn dotfiles_core::error::DotfilesError::is_inconsistent_config(&self) -> bool
pub fn dotfiles_core::error::DotfilesError::is_missing_config(&self, config_name: &str) -> bool
pub fn dotfiles_core::error::DotfilesError::is_wrong_yaml(&self) -> bool
pub fn dotfiles_core::error::DotfilesError::is_yaml_parse_error(&self) -> bool
pub fn dotfiles_core::error::DotfilesError::message(&self) -> &String
pub fn dotfiles_core::error::ErrorType::fmt(&self, f: &mut $crate::fmt::Formatter<'_>) -> $crate::fmt::Result
pub fn dotfiles_core::error::ErrorType::fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result
pub fn dotfiles_core::error::add_directive_error_prefix<'a, D, T>(dir: &'a D, res: Result<T, dotfiles_core::error::DotfilesError>) -> Result<T, dotfiles_core::error::DotfilesError> where D: dotfiles_core::directive::Directive<'a>
pub fn dotfiles_core::error::execution_error(popen_error: Option<PopenError>, exit_status: Option<ExitStatus>) -> dotfiles_core::error::ErrorType
pub fn dotfiles_core::error::fold_until_first_err<I, Folded, Processed, F, P, E>(iterable: I, init: Result<Folded, E>, process_function: P, fold_function: F) -> Result<Folded, E> where I: IntoIterator, F: FnMut(Folded, Processed) -> Result<Folded, E>, P: FnMut(<I as >::Item) -> Result<Processed, E>
pub fn dotfiles_core::error::process_until_first_err<I, F, E>(iterable: I, process_function: F) -> Result<(), E> where I: IntoIterator, F: FnMut(<I as >::Item) -> Result<(), E>
pub fn dotfiles_core::exec_wrapper::execute_commands(cmds: Vec<Exec>, popen_error_message: &str, error_while_running_message: &str) -> Result<(), dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::path::convert_path_to_absolute(file_name: &Path, current_dir: Option<&Path>) -> Result<PathBuf, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::path::process_home_dir_in_path(value: &Path) -> PathBuf
pub fn dotfiles_core::settings::Setting::clone(&self) -> dotfiles_core::settings::Setting
pub fn dotfiles_core::settings::Setting::eq(&self, other: &dotfiles_core::settings::Setting) -> bool
pub fn dotfiles_core::settings::Setting::fmt(&self, f: &mut $crate::fmt::Formatter<'_>) -> $crate::fmt::Result
pub fn dotfiles_core::settings::initialize_settings_object(settings: &[(String, dotfiles_core::settings::Setting)]) -> dotfiles_core::settings::Settings
pub fn dotfiles_core::settings::parse_setting(setting_type: &dotfiles_core::settings::Setting, yaml: &StrictYaml) -> Result<dotfiles_core::settings::Setting, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::fold_hash_until_first_err<T, P, Processed, F>(yaml: &StrictYaml, init: Result<T, dotfiles_core::error::DotfilesError>, process_function: P, fold_function: F) -> Result<T, dotfiles_core::error::DotfilesError> where P: FnMut(String, &StrictYaml) -> Result<Processed, dotfiles_core::error::DotfilesError>, F: FnMut(T, Processed) -> Result<T, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::get_boolean_from_yaml_hash(name: &str, yaml: &StrictYaml) -> Result<bool, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::get_boolean_setting_from_context(name: &str, context_settings: &dotfiles_core::settings::Settings, directive_defaults: &dotfiles_core::settings::Settings) -> Result<bool, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::get_boolean_setting_from_yaml_or_context(name: &str, yaml: &StrictYaml, context_settings: &dotfiles_core::settings::Settings, directive_defaults: &dotfiles_core::settings::Settings) -> Result<bool, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::get_integer_from_yaml_hash(name: &str, yaml: &StrictYaml) -> Result<i64, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::get_integer_setting(name: &str, context_settings: &dotfiles_core::settings::Settings, directive_defaults: &dotfiles_core::settings::Settings) -> Result<i64, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::get_integer_setting_from_yaml_or_context(name: &str, yaml: &StrictYaml, context_settings: &dotfiles_core::settings::Settings, directive_defaults: &dotfiles_core::settings::Settings) -> Result<i64, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::get_optional_string_array_from_yaml_hash(name: &str, yaml: &StrictYaml) -> Result<Vec<String>, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::get_setting_from_context(name: &str, context_settings: &dotfiles_core::settings::Settings, directive_defaults: &dotfiles_core::settings::Settings) -> Result<dotfiles_core::settings::Setting, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::get_setting_from_yaml_hash(name: &str, setting_type: &dotfiles_core::settings::Setting, yaml: &StrictYaml) -> Result<dotfiles_core::settings::Setting, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::get_string_array_from_yaml_hash(name: &str, yaml: &StrictYaml) -> Result<Vec<String>, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::get_string_content_or_keyed_value(yaml: &StrictYaml, key: Option<&str>) -> Result<String, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::get_string_from_yaml_hash(name: &str, yaml: &StrictYaml) -> Result<String, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::get_string_setting(name: &str, context_settings: &dotfiles_core::settings::Settings, directive_defaults: &dotfiles_core::settings::Settings) -> Result<String, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::get_string_setting_from_yaml_or_context(name: &str, yaml: &StrictYaml, context_settings: &dotfiles_core::settings::Settings, directive_defaults: &dotfiles_core::settings::Settings) -> Result<String, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::map_yaml_array<T, F>(yaml_array: &StrictYaml, process: F) -> Result<Vec<T>, dotfiles_core::error::DotfilesError> where F: FnMut(&StrictYaml) -> Result<T, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::parse_as_array(yaml: &StrictYaml) -> Result<Vec<StrictYaml>, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::parse_as_boolean(yaml: &StrictYaml) -> Result<bool, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::parse_as_integer(yaml: &StrictYaml) -> Result<i64, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::parse_as_string(yaml_to_parse: &StrictYaml) -> Result<String, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::parse_as_string_array(yaml: &StrictYaml) -> Result<Vec<String>, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::process_value_from_yaml_hash<T, F>(key: &str, yaml_hash: &StrictYaml, process: F) -> Result<T, dotfiles_core::error::DotfilesError> where F: FnMut(&StrictYaml) -> Result<T, dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::process_yaml_hash_until_first_err<F>(yaml_hash: &StrictYaml, process_function: F) -> Result<(), dotfiles_core::error::DotfilesError> where F: FnMut(String, &StrictYaml) -> Result<(), dotfiles_core::error::DotfilesError>
pub fn dotfiles_core::yaml_util::read_yaml_file(file: &Path) -> Result<Vec<StrictYaml>, dotfiles_core::error::DotfilesError>
pub mod dotfiles_core
pub mod dotfiles_core::action
pub mod dotfiles_core::directive
pub mod dotfiles_core::error
pub mod dotfiles_core::exec_wrapper
pub mod dotfiles_core::path
pub mod dotfiles_core::settings
pub mod dotfiles_core::yaml_util
pub struct dotfiles_core::directive::DirectiveData
pub struct dotfiles_core::error::DotfilesError
pub struct field dotfiles_core::error::ErrorType::ExecutionError::exit_status: Option<ExitStatus>
pub struct field dotfiles_core::error::ErrorType::ExecutionError::popen_error: Option<PopenError>
pub struct field dotfiles_core::error::ErrorType::FileSystemError::fs_error: std::io::Error
pub struct field dotfiles_core::error::ErrorType::IncompleteConfigurationError::missing_field: String
pub struct field dotfiles_core::error::ErrorType::UnexpectedYamlTypeError::encountered: StrictYaml
pub struct field dotfiles_core::error::ErrorType::UnexpectedYamlTypeError::expected: StrictYaml
pub struct field dotfiles_core::error::ErrorType::YamlParseError::scan_error: ScanError
pub trait dotfiles_core::Action<'a>
pub trait dotfiles_core::Directive<'a>: dotfiles_core::directive::HasDirectiveData<'a>
pub trait dotfiles_core::action::Action<'a>
pub trait dotfiles_core::action::ActionParser<'a>: dotfiles_core::directive::HasDirectiveData<'a>
pub trait dotfiles_core::action::ConditionalAction<'a>: dotfiles_core::action::Action<'a>
pub trait dotfiles_core::directive::Directive<'a>: dotfiles_core::directive::HasDirectiveData<'a>
pub trait dotfiles_core::directive::HasDirectiveData<'a>
pub type dotfiles_core::Settings = HashMap<String, dotfiles_core::settings::Setting>
pub type dotfiles_core::action::ActionParser::ActionTypedotfiles_core::action::Action<'a>
pub type dotfiles_core::settings::Settings = HashMap<String, dotfiles_core::settings::Setting>
