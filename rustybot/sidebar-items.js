initSidebarItems({"enum":[["Color","The set of available colors for the terminal foreground/background."],["ColorChoice","ColorChoice represents the color preferences of an end user."],["Level","An enum representing the available verbosity levels of the logger."],["LevelFilter","An enum representing the available verbosity level filters of the logger."],["LevelPadding","Padding to be used for logging the level"],["TerminalMode","Specifies which streams should be used when logging"],["ThreadLogMode","Mode for logging the thread name or id or both."],["ThreadPadding","Padding to be used for logging the thread id/name"]],"fn":[["main",""],["process",""]],"mod":[["flags",""]],"struct":[["CombinedLogger","The CombinedLogger struct. Provides a Logger implementation that proxies multiple Loggers as one."],["Config","Configuration for the Loggers"],["ConfigBuilder","Builder for the Logger Configurations (`Config`)"],["HomebrewInstallAction","[HomebrewInstallAction] installs homebrew."],["OhMyZshInstallAction","[OhMyZshInstallAction] sets up ohmyzsh."],["SimpleLogger","The SimpleLogger struct. Provides a very basic Logger implementation"],["TermLogger","The TermLogger struct. Provides a stderr/out based Logger implementation"],["WriteLogger","The WriteLogger struct. Provides a Logger implementation for structs implementing `Write`, e.g. File"]],"trait":[["Action","An action to be run by a the rustybot runtime."],["SharedLogger","Trait to have a common interface to obtain the Level of Loggers"]]});