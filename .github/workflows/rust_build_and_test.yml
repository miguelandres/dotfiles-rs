name: Rust Unit Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    name: ${{ matrix.make.name }} (${{ matrix.target.name }})
    runs-on: ${{ matrix.target.gh_env }}
    strategy:
      fail-fast: false
      matrix:
        rust: [nightly]
        target:
          - name: x86_64-unknown-linux-gnu
            gh_env: ubuntu-latest
          - name: aarch64-apple-darwin
            gh_env: macos-11
          - name: x86_64-apple-darwin
            gh_env: macos-11
        include:
          - target:
              gh_env: ubuntu-latest
            sccache-path: /home/runner/.cache/sccache
          - target:
              gh_env: macos-11
            sccache-path: /Users/runner/Library/Caches/Mozilla.sccache

    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      RUSTV: ${{ matrix.rust }}
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ matrix.sccache-path }}
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out

    steps:
      - uses: actions/checkout@v2
      - name: Install sccache (ubuntu-latest)
        if: matrix.target.gh_env == 'ubuntu-latest'
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: 0.2.13
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install sccache (macos-11)
        if: matrix.target.gh_env == 'macos-11'
        run: |
          brew update
          brew install sccache
      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.target.name }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.target.name }}-cargo-
      - name: Save sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: ${{ matrix.sccache-path }}
          key: ${{ matrix.target.name }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.target.name }}-sccache-
      - name: Start sccache server
        run: sccache --start-server
      - name: Build
        run: cargo build --verbose --target ${{ matrix.target.name }}
      - name: Run tests
        if: matrix.target.name != 'aarch64-apple-darwin' # cannot run aarch64 on intel
        run: cargo test --verbose --target ${{ matrix.target.name }}
      - name: Install Homebrew & ohmyzsh and check brew is installed
        if: matrix.target.name != 'aarch64-apple-darwin' # cannot run aarch64 on intel
        run: |
          cargo run --target ${{ matrix.target.name }} -- install-homebrew
          cargo run --target ${{ matrix.target.name }} -- install-oh-my-zsh --skip-chsh
          which brew
