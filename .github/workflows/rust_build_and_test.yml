name: Rust Unit Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    name: ${{ matrix.make.name }} (${{ matrix.target.name }})
    runs-on: ${{ matrix.target.gh_env }}
    strategy:
      fail-fast: false
      matrix:
        rust: [nightly]
        target:
          - name: x86_64-unknown-linux-gnu
            gh_env: ubuntu-latest
          - name: aarch64-apple-darwin
            gh_env: macos-11
          - name: x86_64-apple-darwin
            gh_env: macos-11

    env:
      RUST_BACKTRACE: full
      RUSTV: ${{ matrix.rust }}

    steps:
      - uses: actions/checkout@v2
      # When rustup is updated, it tries to replace its binary, which on Windows is somehow locked.
      # This can result in the CI failure, see: https://github.com/rust-lang/rustup/issues/3029
      - name: Setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust}}
          target: ${{ matrix.target.name }}
          override: true
          profile: minimal

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ matrix.target.name }}--branch--${{ github.ref }}
      - name: Build
        run: cargo build --target ${{ matrix.target.name }}
      - name: Run tests
        if: matrix.target.name != 'aarch64-apple-darwin' # cannot run aarch64 on intel
        run: cargo test --target ${{ matrix.target.name }}
      - name: Install Homebrew & ohmyzsh and check brew is installed
        if: matrix.target.name != 'aarch64-apple-darwin' # cannot run aarch64 on intel
        run: |
          cargo run --target ${{ matrix.target.name }} -- --log-level-filter debug apply-config tests/empty.yaml
          cargo run --target ${{ matrix.target.name }} -- --log-level-filter debug apply-config tests/defaults_only.yaml
          cargo run --target ${{ matrix.target.name }} -- --log-level-filter debug apply-config tests/basic_run.yaml
          cat test_dir/README.md
      - name: Install Homebrew & ohmyzsh and check brew is installed
        if: matrix.target.name != 'aarch64-apple-darwin' # cannot run aarch64 on intel
        run: |
          cargo run --target ${{ matrix.target.name }} -- --log-level-filter debug install-homebrew
          cargo run --target ${{ matrix.target.name }} -- --log-level-filter debug install-oh-my-zsh --skip-chsh
